@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model GAP.Models.Insurance;

<div class="container py-5">
    <div class="row">
        <div class="col-md-10 mx-auto">
            @using (Html.BeginForm("Insurance", "Home", FormMethod.Post, new { @id = "frmInsurance", @name = "frmInsurance", @class = "form-horizontal" }))
            {
                <h5 style="text-align:center; color:cadetblue"><srtong>INSURANCES</srtong></h5>
                <br>
                <div class="form-group row">
                    <div class="col-sm-6">
                        @Html.LabelFor(m => m.Name, new { @style = "font-weight: bold" })
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Insurance" })
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(m => m.Description, new { @style = "font-weight: bold" })
                        @Html.TextBoxFor(m => m.Description, new { @class = "form-control", @placeholder = "Description" })
                        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-6">
                        @Html.LabelFor(m => m.CoveringTypeId, new { @style = "font-weight: bold" })
                        @Html.DropDownListFor(m => m.CoveringTypeId, new SelectList(Enumerable.Empty<SelectListItem>()), new { @class = "form-control", @placeholder = "Select Option" })
                        @Html.ValidationMessageFor(m => m.CoveringTypeId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(m => m.RiskTypeId, new { @style = "font-weight: bold" })
                        @Html.DropDownListFor(m => m.RiskTypeId, new SelectList(Enumerable.Empty<SelectListItem>()), new { @class = "form-control", @placeholder = "Select Option" })
                        @Html.ValidationMessageFor(m => m.RiskTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-6">
                        @Html.LabelFor(m => m.StartDate, new { @style = "font-weight: bold" })
                        @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control", @placeholder = "Validity" })
                        @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(m => m.Period, new { @style = "font-weight: bold" })
                        @Html.TextBoxFor(m => m.Period, new { @class = "form-control", @placeholder = "Period" })
                        @Html.ValidationMessageFor(m => m.Period, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-6">
                        @Html.LabelFor(m => m.Price, new { @style = "font-weight: bold" })
                        @Html.TextBoxFor(m => m.Price, new { @class = "form-control", @placeholder = "Price" })
                        @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(m => m.ClientId, new { @style = "font-weight: bold" })
                        @Html.DropDownListFor(m => m.ClientId, new SelectList(Enumerable.Empty<SelectListItem>()), new { @class = "form-control", @placeholder = "Select Option" })
                        @Html.ValidationMessageFor(m => m.ClientId, "", new { @class = "text-danger" })
                        @Html.TextBoxFor(m => m.Id, new { @class = "form-control", @style = "display:none" })
                    </div>
                </div>
                <button type="submit" id="txtInsurances" class="btn backgroundControl px-4 float-left">Save</button>
                <button type="button" id="cleanClient" class="btn backgroundControl px-4 float-left">Clean</button>
            }
        </div>
    </div>
</div>
<div class="container py-5">
    <div class="row">
        <div class="col-md-10 mx-auto">
            <div class="form-group row">               
                <div class="col-sm-6">
                    <input class="form-control mr-sm-2" type="search" placeholder="Document of the Client" id="txtDocument" value="@TempData["document"]">
                </div>
                <div class="col-sm-6">
                    <button class="btn backgroundControl my-2 my-sm-0" id="btnSearch" type="button">Search</button>
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-primary" id="idTable">
        <div class="panel-heading">
        </div>
        <div class="panel-body">
            <table class="table table-striped" id="Table">
                <tr>
                    <th class="backgroundControl text-center">N°</th>
                    <th class="backgroundControl text-center">Insurance</th>
                    <th class="backgroundControl text-center">Description</th>
                    <th class="backgroundControl text-center">Covering Type</th>
                    <th class="backgroundControl text-center">Risk Type</th>
                    <th class="backgroundControl text-center">Validity</th>
                    <th class="backgroundControl text-center">Period</th>
                    <th class="backgroundControl text-center">Price</th>
                    <th class="backgroundControl text-center">Client</th>
                    <th style="display:none">ClientId</th>
                    <th style="display:none">Covering</th>
                    <th style="display:none">Risk</th>
                    <th class="backgroundControl text-center">Action</th>
                </tr>
            </table>
        </div>
    </div>
</div>
    <script type="text/javascript">

        $(document).ready(function () {           
            var doc = $('#txtDocument').val();
            doc = Number(doc);
            if (doc > 0) {                
                GetInsurancesByDocument(doc);
            }
            else
            {               
                $('#txtDocument').val("");
                GetAllInsurances();
            }
           
            $('#idTable').hide();
            getCurrentlyDate();
            GetAllClient();
            GetAllCoveringType();
            GetAllRiskType();
            CleanForm();

            $("#cleanClient").on("click", function () {
                CleanForm();
            });

            $("#btnSearch").on("click", function () {               
                var doc = $('#txtDocument').val();   
                if (doc == "")
                {
                    GetAllInsurances();
                }
                else
                {
                     doc = Number(doc);
                    GetInsurancesByDocument(doc);
                }
            });

            $("#frmInsurance").on("submit", function (event) {
                event.preventDefault();               
                var validateForm = $("#frmInsurance").valid();
                var Id = $("#Id").val();

                if (validateForm)
                     var insurance = MapInsurance();
                   
                if (Id == "")
                    AddInsurance(insurance);               
                else 
                    UpdateInsurance(insurance, Number(Id));
            });
        });

        function CleanForm() {
            $("#Name").val("");
            $("#Description").val("");
            $("#CoveringTypeId").val("");
            $("#RiskTypeId").val("");
            $("#StartDate").val("");
            $("#Period").val("");
            $("#Price").val("");
            $("#ClientId").val("");
            $("#Id").val("");     
        }

        function MapInsurance() {
            var period = $("#Period").val();
            var price = $("#Price").val();
            var coveringType = $("#CoveringTypeId option:selected").val();
            var riskType = $("#RiskTypeId option:selected").val();
            var client = $("#ClientId option:selected").val();

            insurance = new Object();
            insurance.name = $("#Name").val();
            insurance.description = $("#Description").val();
            insurance.startDate = $("#StartDate").val();
            insurance.period = Number(period);
            insurance.price = Number(price);
            insurance.coveringTypeId = Number(coveringType);
            insurance.riskTypeId = Number(riskType);
            insurance.clientId = Number(client);
            insurance.coveringType = null;
            insurance.riskType = null;
            insurance.client = null;

            return insurance;
        }


        function GetAllInsurances() {
            $("body").loading('start');
            $.ajax({
                type: "GET",
                url: "/api/Insurance",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {                   
                    $("#idTable").find("tr:gt(0)").remove();
                    if (data != null)
                    {                
                        $('#idTable').show();
                        $.each(data, function (i, item) {
                            var rows =
                                "<tr>" +
                                "<td id='Id' class='Id'>" + item.id + "</td>" +
                                "<td id='Name' class='Name'>" + item.name + "</td>" +
                                "<td id='Description' class='Description'>" + item.description + "</td>" +
                                "<td id='CoveringTypeId' class='CoveringTypeId'>" + item.coveringType.covering + "</td>" +
                                "<td id='RiskTypeId' class='RiskTypeId'>" + item.riskType.type + "</td>" +
                                "<td id='StartDate' class='StartDate'>" + item.startDate + "</td>" +
                                "<td id='Period' class='Period'>" + item.period + "</td>" +
                                "<td id='Price' class='Price'>" + item.price + "</td>" +
                                "<td id='Client' class='Client'>" + item.client.name + "</td>" +
                                "<td id='ClientId' class='ClientId' style='display:none;'>" + item.client.id + "</td>" +
                                "<td id='InsuranceId' class='InsuranceId' style='display:none;'>" + item.id + "</td>" +
                                "<td id='CoveringType' class='CoveringType' style='display:none;'>" + item.coveringType.id + "</td>" +
                                "<td id='RiskType' class='RiskType' style='display:none;'>" + item.riskType.id + "</td>" +
                                "<td>" +
                                "<button class='btn btn-outline-warning my-2 my-sm-0' id='btnEdit' type='button' onclick='EditRow(this);'>Edit</button>" +
                                "&nbsp;" +
                                "<button class='btn btn-outline-danger my-2 my-sm-0' onclick='DeleteRow(this);' id='btnDelete' type='button'" + "data-id='" + item.id + "'>Delete</button>" +
                                "</td>" +
                                "</tr>";
                            $('#Table').append(rows);
                        });
                    }
                },                
                complete: function (xhr, status) {
                        $("body").loading('stop');
                    }
            });
        }

        function GetInsurancesByDocument(id) {  
            $("body").loading('start');
            $.ajax({
                type: "GET",
                url: "/api/Insurance/GetByIdClient/" + id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $("#idTable").find("tr:gt(0)").remove();
                    if (data != null) {
                        $('#idTable').show();
                        $.each(data, function (i, item) {
                            var rows =
                                "<tr>" +
                                "<td id='Id' class='Id'>" + item.id + "</td>" +
                                "<td id='Name' class='Name'>" + item.name + "</td>" +
                                "<td id='Description' class='Description'>" + item.description + "</td>" +
                                "<td id='CoveringTypeId' class='CoveringTypeId'>" + item.coveringType.covering + "</td>" +
                                "<td id='RiskTypeId' class='RiskTypeId'>" + item.riskType.type + "</td>" +
                                "<td id='StartDate' class='StartDate'>" + item.startDate + "</td>" +
                                "<td id='Period' class='Period'>" + item.period + "</td>" +
                                "<td id='Price' class='Price'>" + item.price + "</td>" +
                                "<td id='Client' class='Client'>" + item.client.name + "</td>" +
                                "<td id='ClientId' class='ClientId' style='display:none;'>" + item.client.id + "</td>" +
                                "<td id='InsuranceId' class='InsuranceId' style='display:none;'>" + item.id + "</td>" +
                                "<td id='CoveringType' class='CoveringType' style='display:none;'>" + item.coveringType.id + "</td>" +
                                "<td id='RiskType' class='RiskType' style='display:none;'>" + item.riskType.id + "</td>" +
                                "<td>" +
                                "<button class='btn btn-outline-warning my-2 my-sm-0' id='btnEdit' type='button' onclick='EditRow(this);'>Edit</button>" +
                                "&nbsp;" +
                                "<button class='btn btn-outline-danger my-2 my-sm-0' onclick='DeleteRow(this);' id='btnDelete' type='button'" + "data-id='" + item.id + "'>Delete</button>" +
                                "</td>" +
                                "</tr>";
                            $('#Table').append(rows);
                        });
                    }
                },
                complete: function (xhr, status) {
                    $("body").loading('stop');
                }
            });
        }

        function AddInsurance(insurance) {
            $("body").loading('start');
            $.ajax({
                url: "/api/Insurance",
                type: 'POST',
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(insurance),
                success: function (data) {
                    if (data) {
                        $("#idTable").find("tr:gt(0)").remove();
                        CleanForm();
                        GetAllInsurances();
                        MessageConfirmation("Insurance Created");
                    }
                    else {
                        MessageConfirmation("Can't Create Insurance with RiskTpe Top and coverage percentage more than 50% ");
                    }
                },
                complete: function (xhr, status) {
                    $("body").loading('stop');
                }
            });
        }

        function MessageConfirmation(message) {
            alert(message);
        }

        function clearTable() {
            $("#idTable").find("tr:gt(0)").remove();
        }

        function DeleteRow(row) {
            var action = confirm("Are you sure to remove this Insurance?");
            if (action == true)
                DeleteClientById(row);
        }

        function DeleteClientById(val) {
            $("body").loading('start');
            var idClient = $(val).data("id");
            $.ajax({
                url: "/api/Insurance/" + idClient,
                type: 'DELETE',
                success: function (worked) {
                    if (worked) {
                        $(val).parents("tr").remove();
                        MessageConfirmation("Insurance Deleted");
                    }
                    else {
                        MessageConfirmation("Insurance can't be delete.");
                    }
                },
                complete: function (xhr, status) {
                        $("body").loading('stop');
                    }
            });
        }

        function EditRow(data) {
             $("body").loading('start');
            var row = $(data).closest("tr");
            var name = row.find(".Name").text();
            var description = row.find(".Description").text();
            var coveringType = row.find(".CoveringType").text();
            var riskType = row.find(".RiskType").text();
            var startDate = row.find(".StartDate").text();
            var period = row.find(".Period").text();
            var price = row.find(".Price").text();
            var clientId = row.find(".ClientId").text();
            var insuranceId = row.find(".InsuranceId").text();

            $("#Name").val(name);
            $("#Description").val(description);
            $("#CoveringTypeId").val(coveringType);
            $("#RiskTypeId").val(riskType);
            $("#StartDate").val(startDate);
            $("#Period").val(period);
            $("#Price").val(price);
            $("#ClientId").val(clientId);
            $("#Id").val(insuranceId)
            $("body").loading('stop');
        }

        function getCurrentlyDate() {
            var today = new Date();
            var dd = String(today.getDate()).padStart(2, '0');
            var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
            var yyyy = today.getFullYear();

            today = mm + '/' + dd + '/' + yyyy;
            $("#StartDate").val(today);
        }

        function GetAllClient() {
            $.ajax({
                type: "GET",
                url: "/api/Client",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $.each(data, function (i, item) {
                        $("#ClientId").append(
                            "<option value='" + item.id + "'>" + item.name + "</option>");
                    });
                }
            });
        }

        function GetAllCoveringType() {
            $.ajax({
                type: "GET",
                url: "/api/CoveringType",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $.each(data, function (i, item) {
                        $("#CoveringTypeId").append(
                            "<option value='" + item.id + "'>" + item.covering + "</option>");
                    });
                }
            });
        }

        function GetAllRiskType() {
            $.ajax({
                type: "GET",
                url: "/api/RiskType",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $.each(data, function (i, item) {
                        $("#RiskTypeId").append(
                            "<option value='" + item.id + "'>" + item.type + "</option>");
                    });
                }
            });
        }

        function UpdateInsurance(client, Id) {
            $("body").loading('start');
            $.ajax({
                url: "/api/Insurance/" + Id,
                type: 'PUT',
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(client),
                success: function (data) {
                    if (data) {
                        $("#idTable").find("tr:gt(0)").remove();
                        CleanForm();
                        GetAllInsurances();
                        MessageConfirmation("Client Updated");
                    }
                    else {
                        MessageConfirmation("Can't Create Insurance with RiskTpe Top and coverage percentage more than 50% ");
                    }
                },
                complete: function (xhr, status) {
                    $("body").loading('stop');
                }
            });
        }


    </script>
